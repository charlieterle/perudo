Charles Dieterle
Perudo probability explanations

This is an explanation of the probability calculations used in
the Perudo game.

I took formulas for dice roll probabilities from the
dice probability calculator and the combination calculator pages on
the website onmicalculator.com

https://www.omnicalculator.com/statistics/dice
https://www.omnicalculator.com/statistics/combination

The 4 indented formulas that follow are taken directly from the website

The following is a formula for the probability of rolling exactly
r dice with a given value, where n = total number of dice,
and p = (total sides on a die)

    P(X=r) = nCr * pʳ * (1-p)ⁿ⁻ʳ
    where
    nCr = n!/(r!(n-r)!)

The following example is the probability of rolling exactly 2 of any
given value with a set of seven twelve-sided dice

    P(X=2) = 21 * (1/12)² * (11/12)⁵ = 0.09439

To get the probability of rolling AT LEAST r dice with a given value,
add up the probabilities of all possible values of X >= r.

The following example is the probability of rolling at least 2 of any
given value with a set of seven twelve-sided dice

    P = P(X=2) + P(X=3) + P(X=4) + P(X=5) + P(X=6) + P(X=7) = 0.11006

------------------------------------------------------------

Taking these formulas and applying them to Perudo, we get:

n = the number of dice that cannot be seen by the player
r = the quantity of the current bet minus the number of dice in the player's
    cup that are either equal to 1 or the die value of the current bet
p = 1/3 if the die value of the current bet is greater than or equal to 2,
    1/6 if the die value of the current bet equals 1

Note:
  - The values for p assume 6-sided dice. This can be easily changed to any
    number of sides.
  - The value of n does not include dice that the player have, because the
    player knows what values those dice are, therefore there is no
    probability involved.

With this information, we can determine the probability that any given
bet will be true, and thus determine the best move out of the available
set of moves.

In standard Perudo (without Calza or Palifico), the available set of moves
is as follows, with num representing die value and total representing quantity:
    - dudo
    - bet with num += 1 or more (not possible if num == 6)
    - bet with total += 1
    - bet with num = 1 and total = total / 2, rounding up
        (only available if current bet has num > 1)
    - bet with num += 1 or more and total = total * 2 + 1
        (only available if current bet has num == 1)

Note that in the "bet with total += 1" option, I am ignoring the possibility
that a player can raise the total by more than one, because this will always
yield a lower probability of success. Nonetheless, raising the total by more
than 1 will occasionally be the best play in a game of Perudo when you take into
account that after making a safe bet, the probability that you will bet again
in that round rises, which lowers your chances of success in that round.

------------------------------------------------------------

Explanation of the "dudo dial":

On the surface, the probability that a dudo call will be successful is 1 - P(bet),
where P(bet) is the probability of the current bet's success. However, this
formula does not work well in practice because the previous player's bet is
usually a signal of what is in their own hand. Therefore, I have introduced
a "dudo dial" into the calculation, which was derived from doing simulations
of 100-1000 games at a time and comparing the avg calculated success of a dudo
call with the avg ACTUAL success of the dudo call. I found that using the naive
formula above, the calculated rate of success for dudo calls was around 62%, but
the actual success rate was only about 42%. These numbers apply to games with
6 players and 5 dice per player.

To use the dudo dial, I use the formula P(dudo) = 1 - dudo_dial - P(bet)
This formula just brings down the calculated probability of a dudo call to be
more in line with what is likely, assuming the previous player made a safe bet,
i.e., their bet reflects the dice they have in their cup.

The dudo dial was originally a constant of .22, which brought the average
probability calculation of dudo success in line with the actual measured success
rate. However, I realized this was too blunt a tool to make computer players
that would act intelligently, so I decided to make the dudo dial a function
that returns different values depending on the ratio of dice counts between
players. Below, I have outlined some of the observations that shaped the dudo
dial function, and how it could be improved even more.

------------------------------------------------------------

Observations gleaned from simulations that measure dice counts and ratios:

When the player calling dudo has 1 die, the dudo success rate is always 100%.

Looking at dice ratios between players, it's evident that dudo is more
successful when the defensive player has fewer dice,
and less successful when the defensive player has more dice, unless the
offensive player has 1 die, as mentioned above.

By excluding situations where the offensive player has one die, a linear-looking
relationship appears. Using the linear regression graph in
inter_player_simulation.py, we can extract this regression line:
P(dudo success) = ratio * .09 + .33

This relationship assumes that the calculated dudo success rate is
approximately steady at about .62.

I used this linear relationship to create the dudo dial function, but it is
still incomplete, as it does not address the situations where the offensive
player has one die, and yet has a 100% dudo success rate. I am currently
experimenting with solutions to this problem to bring the predicted success rate
in line with the observed success rate.
